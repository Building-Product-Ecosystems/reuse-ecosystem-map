{"version":3,"sources":["webpack:///./src/map.js","webpack:///./src/data_constants.js","webpack:///./src/table.js","webpack:///./src/data.js","webpack:///./src/index.js"],"names":["geoJSON","map","LON_COL","ALL_FIELDS","INITIAL_COORDS","isMobile","window","innerHeight","innerWidth","roleColors","init","data","featureCollection","i","length","feature","replace","lon","lat","match","parseDMS","isNaN","parseFloat","built","buildFeature","push","e","console","log","buildGeoJSON","features","L","center","zoom","scrollWheelZoom","zoomControl","position","addTo","maxZoom","attribution","id","pointsLayers","pointToLayer","latlng","radius","fillColor","getFeatureColor","properties","color","weight","opacity","fillOpacity","onEachFeature","layer","prop","bindPopup","maxWidth","bindTooltip","fitBounds","getBounds","loadMap","setTimeout","document","getElementById","style","display","featureRole","role","trim","split","featureObject","geometry","coordinates","input","parts","degrees","minutes","seconds","direction","dd","parseInt","convertDMSToDD","mapLegend","colors","colorsHTML","variable","hasOwnProperty","join","elementId","$","dataTable","ext","errMode","table","DataTable","responsive","paging","lengthChange","order","columns","title","className","render","type","full","meta","name","regions","item","REGION","filter","ar","indexOf","unshift","appendTo","regionSelect","each","append","attr","this","text","on","selectValue","value","searchValue","column","search","draw","toLowerCase","base","Airtable","apiKey","getAirtableData","a","Promise","resolve","reject","allRecords","select","maxRecords","view","fields","eachPage","records","fetchNextPage","r","err","app","querySelector","parentUrl","location","parent","referrer","href","innerHTML","all","Data","airtableData","flat","Map","Table","mapLegendShow","mapLegendHide","mapLegendContent","querySelectorAll","onclick","classList","add","remove","forEach","div","addEventListener"],"mappings":"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","file":"app.cc396e79.js","sourcesContent":["import * as L from 'leaflet'\n\nimport {\n  LON_COL,\n  LAT_COL,\n  ENTITY_COL,\n  LOCATION_COL,\n  ROLE_COL,\n  ADDRESS_COL,\n  CONTACT_COL,\n  EMAIL_COL,\n  PHONE_COL,\n  WEBSITE_COL,\n  COLLABORATION_COL,\n} from './data_constants.js'\n\nconst MAPBOX_LINK = 'https://api.mapbox.com/styles/v1/bplmp/cklqt2e0v3ia517pfvnkqyt1z/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYnBsbXAiLCJhIjoiY2tscXN6ZXJvMHlmZDJ2cHNuYXg4cm0zdSJ9.NJq68mVfGTdY3qFd1Huj5w'\n\nconst INITIAL_COORDS = [37.76496739271615, -122.39985495803376]\nconst INITIAL_ZOOM = 5\nconst isMobile = window.innerHeight >= window.innerWidth\n\n\n\nconst roleColors = {\n  'Consulting (Architecture, Engineering, Environmental)': '#ff7f0e',\n  'Deconstruction': '#2ca02c',\n  'Government / Public Agency': '#aec7e8',\n  'Reuse': '#9467bd',\n  'Remanufacturing / Recycling': '#bcbd22',\n  'Network / Resources / Database': '#eb4034',\n  'Hauling / Warehousing': '#4153f2',\n}\n\nexport {\n  init,\n  roleColors,\n  mapLegend,\n  zoomToRegion,\n}\n\nlet geoJSON\nlet map\n\nfunction init(data) {\n  geoJSON = buildGeoJSON(data)\n  console.log(data)\n  console.log(geoJSON)\n  console.log(data.length, 'rows received')\n  console.log(geoJSON.features.length, 'rows parsed')\n  loadMap(geoJSON)\n  setTimeout(function(){\n    document.getElementById('spinner').style.display = 'none'\n  }, 350)\n}\n\nfunction getFeatureColor(featureRole) {\n  let role = featureRole.trim()\n  if (role.split(' ')[0] === 'Reuse') {\n    role = 'Reuse'  // because there are many types of reuse\n  }\n  if (roleColors[role]) {\n    return roleColors[role]\n  } else {\n    return '#333333'\n  }\n}\n\nfunction buildFeature(feature) {\n  let featureObject = {\n    \"type\": \"Feature\",\n    \"properties\": feature,\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": []\n    }\n  }\n  // for (let variable in feature) {\n  //   if (feature.hasOwnProperty(variable)) {\n  //     featureObject.properties[variable.trim()] = feature[variable].trim()\n  //   }\n  // }\n  featureObject.geometry.coordinates.push(parseFloat(feature[LON_COL]))\n  featureObject.geometry.coordinates.push(parseFloat(feature[LAT_COL]))\n  return featureObject\n}\n\nfunction buildGeoJSON(data) {\n  let featureCollection = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n  }\n  for (var i = 0; i < data.length; i++) {\n    let feature = data[i]\n    feature[LON_COL] = feature[LON_COL].replace(',', '.')\n    feature[LAT_COL] = feature[LAT_COL].replace(',', '.')\n    let lon = feature[LON_COL]\n    let lat = feature[LAT_COL]\n    if (lon.match(/[a-z]/i) && lat.match(/[a-z]/i)) {\n      feature[LON_COL] = parseDMS(feature[LON_COL])\n      feature[LAT_COL] = parseDMS(feature[LAT_COL])\n    }\n    try {\n      if (isNaN(parseFloat(lon)) == false && isNaN(parseFloat(lat)) == false) {\n        let built = buildFeature(feature)\n        featureCollection['features'].push(built)\n      }\n    } catch (e) {\n        console.log('error parsing row', i, feature, e)\n    }\n  }\n  return featureCollection\n}\n\nfunction loadMap(geoJSON) {\n  map = L.map('map', {\n    center: INITIAL_COORDS,\n    zoom: INITIAL_ZOOM,\n    scrollWheelZoom: false,\n    zoomControl: false,\n  })\n\n  L.control.zoom({\n    position: 'bottomleft'\n  }).addTo(map);\n\n  L.tileLayer(MAPBOX_LINK, {\n    maxZoom: 18,\n    attribution: 'Map data &copy <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n      'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.light'\n  }).addTo(map)\n\n  function popup(feature, layer) {\n    let prop = feature.properties\n\n    layer.bindPopup(`\n      <div class=\"popup\">\n        <h2>${prop[ENTITY_COL]}</h2>\n        ${prop[LOCATION_COL] ? `<h4>${prop[LOCATION_COL]}</h4>` : ''}\n        <hr/>\n        <table class=\"popup-table\">\n          <tbody>\n            <tr><td><strong>Role(s)</strong></td><td>${prop[ROLE_COL]}</td></tr>\n            <tr><td><strong>Address</strong></td><td>${prop[ADDRESS_COL]}</td></tr>\n            <tr><td><strong>Contact</strong></td><td>${prop[CONTACT_COL]}</td></tr>\n            <tr><td><strong>Email</strong></td><td><a href=\"mailto:${prop[EMAIL_COL]}\">${prop[EMAIL_COL]}</a></td></tr>\n            <tr><td><strong>Phone</strong></td><td><a href=\"tel:${prop[PHONE_COL]}\">${prop[PHONE_COL]}</a></td></tr>\n            <tr><td><strong>Website</strong></td><td><a href=\"${prop[WEBSITE_COL]}\" target=\"_blank\">${prop[WEBSITE_COL]}</a></td></tr>\n          </tbody>\n        </table>\n        <p class=\"popup-p\"><strong>Collaboration Opportunities: </strong>${prop[COLLABORATION_COL]}</p>\n      </div>\n      `, {\n        maxWidth : isMobile ? window.innerWidth * 0.75 : 450\n      })\n\n    layer.bindTooltip(`\n      <div class=\"tooltip\">\n        <strong style=\"font-size: 1.25em;\">${prop[ENTITY_COL]}</strong>\n        ${prop[LOCATION_COL] ? `<br /><span>${prop[LOCATION_COL]}</span>` : ''}\n      </div>\n      `, {\n        maxWidth : isMobile ? window.innerWidth * 0.75 : 450\n      })\n  }\n\n  const pointsLayers = L.geoJSON(geoJSON, {\n\n    pointToLayer: function(feature, latlng) {\n      return L.circleMarker(latlng, {\n        radius: 9,\n        fillColor: getFeatureColor(feature.properties[ROLE_COL]),\n        color: \"#fff\",\n        weight: 1.5,\n        opacity: 1,\n        fillOpacity: 0.9,\n      })\n    },\n    onEachFeature: popup\n  }).addTo(map)\n\n  map.fitBounds(pointsLayers.getBounds())\n}\n\nfunction zoomToRegion(regionName) {\n  if (regionName.toLowerCase() === 'all') {\n    map.fitBounds(L.geoJSON(geoJSON).getBounds())\n    return\n  }\n  // const filteredData = geoJSON.features.filter(row => row.properties['REGION'] === regionName)\n  // if (filteredData) {\n  //   map.fitBounds(L.geoJSON(filteredData).getBounds())\n  // }\n}\n\n// https://stackoverflow.com/questions/1140189/converting-latitude-and-longitude-to-decimal-values\nfunction parseDMS(input) {\n    let parts = input.split(/[^\\d\\w\\.]+/)\n    return convertDMSToDD(parts[0], parts[1], parts[2], parts[3])\n}\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n    let dd = parseInt(degrees) + parseInt(minutes)/60 + parseInt(seconds)/(60*60)\n\n    if (direction == \"S\" || direction == \"W\") {\n        dd = dd * -1\n    }\n    return dd\n}\n\nfunction mapLegend(colors) {\n  const colorsHTML = [`\n    <div id=\"map-legend-show\" class=\"map-legend-row map-legend-icon flex ${isMobile ? 'visible' : 'invisible'}\">\n      <span>See Legend</span>\n    </div>\n    <div id=\"map-legend-hide\" class=\"map-legend-row map-legend-icon flex ${isMobile ? 'invisible' : 'visible'}\">\n      <span>Hide Legend</span>\n    </div>\n  `]\n  for (let variable in colors) {\n    if (colors.hasOwnProperty(variable)) {\n      colorsHTML.push(`\n        <div class=\"map-legend-row map-legend-content flex ${isMobile ? 'invisible' : 'visible'}\">\n          <div class=\"map-legend-color\" style=\"background: ${colors[variable]}\"></div>\n          <span>${variable}</span>\n        </div>\n      `)\n    }\n  }\n  return `<div class=\"map-legend flex flex-column\">${colorsHTML.join('\\n')}</div>`\n}\n","export const LAT_COL = 'Latitude'\nexport const LON_COL = 'Longitude'\nexport const ENTITY_COL = \"Entity Name\"\nexport const LOCATION_COL = \"Region\"\nexport const ROLE_COL = \"Primary Role\"\nexport const SECONDARY_ROLE_COL = \"Secondary Role (if applicable)\"\nexport const ADDRESS_COL = \"Full Address\"\nexport const CONTACT_COL = \"Contact Name\"\nexport const EMAIL_COL = \"Email\"\nexport const PHONE_COL = \"Phone Number\"\nexport const WEBSITE_COL = \"Website\"\nexport const COLLABORATION_COL = \"Collaboration Opportunities\"\n\nexport const ALL_FIELDS = [\n  \"Entity Name\",\n  \"Region\",\n  \"Primary Role\",\n  \"Secondary Role (if applicable)\",\n  \"Full Address\",\n  \"Contact Name\",\n  \"Email\",\n  \"Phone Number\",\n  \"Website\",\n  \"Collaboration Opportunities\",\n  \"Latitude\",\n  \"Longitude\",\n]\n","// var $ = require( 'jquery' )\n// var dt = require( 'datatables.net' )( window, $ )\nimport * as $ from 'jquery'\nimport * as dt from 'datatables.net'\nimport * as dtResponsive from 'datatables.net-responsive'\nimport { zoomToRegion } from './map.js'\n\nimport {\n  ENTITY_COL,\n  LOCATION_COL,\n  ROLE_COL,\n  SECONDARY_ROLE_COL,\n  ADDRESS_COL,\n  CONTACT_COL,\n  EMAIL_COL,\n  PHONE_COL,\n  WEBSITE_COL,\n  COLLABORATION_COL,\n} from './data_constants.js'\n\nexport {\n  init\n}\n\nfunction init(data, elementId) {\n  $.fn.dataTable.ext.errMode = 'none';  // suppress errors\n\n  // for (var i = 0; i < data.length; i++) {\n  //   let row = data[i]\n  //   if (row[LOCATION_COL]) {\n  //       row[ENTITY_COL] = row[ENTITY_COL] + ' - ' + row[LOCATION_COL]\n  //   }\n  // }\n  const table = $(elementId).DataTable({\n    data: data,\n    responsive: true,\n    // scrollY: '510px',\n    // scrollCollapse: true,\n    paging: true,\n    lengthChange: false,\n    order: [[ 0, \"asc\" ]],\n    columns: [\n      {\n        data: ENTITY_COL,\n        title: 'ENTITY:',\n        className: 'details-col',\n        render: function(data, type, full, meta) {\n          return `<span class=\"details-link\">${data}</span>`\n        }\n      },\n      // {\n      //   data: LOCATION_COL,\n      //   title: 'LOCATION:',\n      // },\n      {\n        data: ROLE_COL,\n        title: 'PRIMARY ROLE:',\n      },\n      {\n        data: SECONDARY_ROLE_COL,\n        title: 'SECONDARY ROLE:',\n      },\n      {\n        data: LOCATION_COL,\n        name: 'REGION',\n        title: 'REGION:',\n      },\n      {\n        data: ADDRESS_COL,\n        title: 'ADDRESS:',\n        className: 'none',\n      },\n      {\n        data: CONTACT_COL,\n        title: 'CONTACT:',\n        className: 'none',\n      },\n      {\n        data: EMAIL_COL,\n        title: 'EMAIL:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"mailto:${data}\">${data}</a>`\n        }\n      },\n      {\n        data: PHONE_COL,\n        title: 'PHONE:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"tel:${data}\">${data}</a>`\n        }\n      },\n      {\n        data: WEBSITE_COL,\n        title: 'WEBSITE:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"${data}\" target=\"_blank\">${data}</a>`\n        }\n      },\n      {\n        data: COLLABORATION_COL,\n        title: 'COLLABORATION OPPORTUNITIES:',\n        className: 'none',\n      },\n    ]\n  })\n\n  // add filter for regions, if there are more than 1\n  const allRegions = data.map(item => item.REGION)\n  const regions = allRegions.filter((item, i, ar) => ar.indexOf(item) === i)\n  if (regions.length > 1) {\n    regions.unshift('All')\n\n    $('<span><strong>Zoom to a region: </strong>&nbsp;</span>').appendTo('#regionSelectDiv')\n\n    var regionSelect = $('<select id=\"regionSelect\">').appendTo('#regionSelectDiv')\n    $(regions).each(function() {\n     regionSelect.append($('<option>').attr('value', this).text(this))\n    })\n\n    regionSelect.on('change', function() {\n      const selectValue = this.value\n      const searchValue = selectValue === 'All' ? '' : selectValue\n      table\n        .column('REGION:name')\n        .search(searchValue)\n        .draw()\n      zoomToRegion(selectValue)\n    })\n  }\n\n}\n","import * as Papa from 'papaparse'\nimport Airtable from \"airtable\";\nimport * as Map from './map.js'\nimport * as Table from './table.js'\n\nimport {\n  ALL_FIELDS,\n} from './data_constants.js'\n\nconst airtableDatabaseId = 'app2Ufltjsi6qQF2b';\nconst airtableApiKey = 'keyXTEWIgSJI4MeGu';\nconst base = new Airtable({apiKey: airtableApiKey}).base(airtableDatabaseId);\nconst baseTableName = 'data';\n\nconst publicSpreadsheetUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSZ_aRgmKOVqj1Ch4zy8zzjkQREuYo0xXzPlJUKv4-7ULfWNNQdJbOFJgVFayS4zbT7vvkIaJ5JZaBa/pub?output=csv'\n\nexport {\n  getAirtableData,\n  getSpreadsheetData,\n}\n\nconst getAirtableData = async () => {\n  return new Promise((resolve, reject) => {\n    let allRecords = [];\n\n    base(baseTableName).select({\n      maxRecords: 500,\n      view: \"View for map\",\n      fields: ALL_FIELDS\n     })\n      .eachPage(\n        (records, fetchNextPage) => {\n          allRecords = [\n            ...allRecords,\n            ...records.map(r => r.fields)\n          ];\n          fetchNextPage();\n        },\n        err => {\n          if (err) reject(err);\n          resolve(allRecords);\n        }\n      );\n  });\n};\n\nfunction getSpreadsheetData() {\n  Papa.parse(publicSpreadsheetUrl, {\n  download: true,\n  header: true,\n  complete: function(results) {\n      const data = results.data\n      const publishedData = data.filter(function(obj){\n        if ('STATUS' in obj) {\n          return obj['STATUS'].trim().toLowerCase() == 'published'\n        }\n      })\n      Map.init(publishedData)\n      Table.init(publishedData, '#table')\n    }\n  })\n}\n","import * as Data from './data.js'\nimport * as Map from './map.js'\nimport * as Table from './table.js'\nimport style from './style/main.scss'\n\nconst app = document.querySelector('#app')\nconst parentUrl = (window.location != window.parent.location) ? document.referrer : document.location.href\n\n\napp.innerHTML = `\n<div id=\"spinner\">\n  <div class=\"spinner-grow text-secondary\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n<div id=\"map\"></div>\n<a href=\"https://www.buildingproductecosystems.org/\" target=\"_blank\">\n  <img src=\"images/bpe-logo.png\" alt=\"Building Product Ecosystems\" id=\"mapLogo\"></img>\n</a>\n<div id=\"mapLegend\"></div>\n<div id=\"regionSelectDiv\"></div>\n${parentUrl.indexOf(\"buildingproductecosystems.org\") > 0  ? \"\" : '<p>Resources compiled by <a href=\"https://www.buildingproductecosystems.org/\">Building Product Ecosystems</a> | Please submit <a href=\"https://www.buildingproductecosystems.org/regional-reuse-resources#suggestions\">suggestions, additions, or corrections</a> here.</p>'}\n<div class=\"table-wrapper\">\n  <table id=\"table\" class=\"stripe display responsive\" width=\"100%\"></table>\n</div>\n`\n\nconst init = async () => {\n  // Data.getSpreadsheetData()\n  let airtableData = await Promise.all([\n    Data.getAirtableData()\n  ]);\n  airtableData = airtableData.flat();\n\n  console.log(airtableData);\n\n  Map.init(airtableData);\n  Table.init(airtableData, '#table');\n\n  const mapLegend = document.querySelector('#mapLegend')\n  mapLegend.innerHTML = Map.mapLegend(Map.roleColors)\n\n  const mapLegendShow = document.querySelector('#map-legend-show')\n  const mapLegendHide = document.querySelector('#map-legend-hide')\n  const mapLegendContent = document.querySelectorAll('.map-legend-content')\n\n  mapLegendShow.onclick = function () {\n    mapLegendShow.classList.add('invisible')\n    mapLegendShow.classList.remove('visible')\n    mapLegendHide.classList.add('visible')\n    mapLegendHide.classList.remove('invisible')\n    mapLegendContent.forEach(div => {\n        div.classList.add('visible')\n        div.classList.remove('invisible')\n    })\n  }\n  mapLegendHide.onclick = function () {\n    mapLegendShow.classList.remove('invisible')\n    mapLegendShow.classList.add('visible')\n    mapLegendHide.classList.remove('visible')\n    mapLegendHide.classList.add('invisible')\n    mapLegendContent.forEach(div => {\n        div.classList.remove('visible')\n        div.classList.add('invisible')\n    })\n  }\n}\n\nwindow.addEventListener('DOMContentLoaded', init)\n"],"sourceRoot":""}